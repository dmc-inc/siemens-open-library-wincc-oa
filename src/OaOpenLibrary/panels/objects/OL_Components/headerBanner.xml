<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8"></prop>
  </prop>
  <prop name="Size">267 47</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[/*
  * WinCC OA Open Library
  * @author DMC, Inc. http://www.dmcinfo.com
  *
  * File: header.xml
  *
  * Revisions: 2019-01-10 - Nick Leisle (nicholas.leisle@dmcinfo.com): created
  *
  *
  * @description
  * This panel grabs the Description from a DP. It used as a header for a popup panel.
*/
#uses &quot;OpenLibrary/Enums/TextAlignmentType&quot;
private string dp = $dpe;
private string backCol;

public void initializePanel()
{
  header.text = dpGetDescription(dp);
  getValue(&quot;header&quot;, &quot;backCol&quot;, backCol);
  header.foreCol = generateContrastingColors(makeDynString(backCol), &quot;white&quot;, DARK_TEXT_COLOR)[1];
}


// Additional Header Properties - use these methods to pass custom display and action behaviors to the component from a calling panel
public void addDisplayBehavior(shared_ptr&lt;IDisplayBehaviorClass&gt; displayBehavior)
{
  Banner.addDisplayBehavior(displayBehavior);
}

public void addActionBehavior(shared_ptr&lt;IActionBehaviorClass&gt; actionBehavior)
{
  Banner.addActionBehavior(actionBehavior);
}

// Panel Properties (Text Alignment)
TextAlignmentType textAlignment = TextAlignmentType::Center;
#property TextAlignmentType textAlignment
public void setTextAlignment(TextAlignmentType editedTextAlignment)
{
  textAlignment = editedTextAlignment;
  switch(textAlignment)
  {
    case TextAlignmentType::Left:
      header.format(&quot;[,,,ALIGNMENT_BEGINNING]&quot;);
      break;
    case TextAlignmentType::Center:
      header.format(&quot;[,,,ALIGNMENT_CENTER]&quot;);
      break;
    case TextAlignmentType::Right:
      header.format(&quot;[,,,ALIGNMENT_END]&quot;);
      break;
  }
  header.text = &quot;Header&quot;;
}
public TextAlignmentType getTextAlignment()
{
  return textAlignment;
}]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  initializePanel();
}]]></script>
 </events>
 <shapes>
  <shape layerId="0" Name="header" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">0 0</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">OL_UI_Menu_Bar</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Segoe UI Semibold,-1,13,5,63,0,0,0,0,0,Regular</prop>
    </prop>
    <prop name="Location">0 0</prop>
    <prop name="Size">220 23</prop>
    <prop name="BorderStyle">None</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
